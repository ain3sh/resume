name: Update PDFs
on:
  workflow_dispatch: # allows manual trigger
  push:
      branches: [ main ]
      paths: # auto trigger on changes to these paths
        - 'src/**'
        - 'public/**'
        - 'data/**'
        - '.github/**'
permissions:
  contents: write

jobs:
  update-pdfs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm' # enable npm cache

      - name: Install Puppeteer
        run: | # prevent updates to package.json
          npm install puppeteer@latest --no-save

      - name: Wait for Vercel Deployment (2 minutes)
        run: |
          echo "‚è≥ Waiting for potential Vercel redeployment to complete..."
          sleep 120
          echo "‚úÖ Proceeding with PDF generation."


      - name: Clear PDFs Directory
        run: |
          echo "üîÑ Clearing existing PDFs except transcript.pdf..."
          mkdir -p pdfs/
          find pdfs/ -type f ! -name 'transcript.pdf' -delete
          find pdfs/ -type d -empty -delete
          echo "‚úÖ PDFs directory cleaned."

      - name: Generate PDFs
        id: generate_pdfs
        run: |
          node .github/scripts/generate-pdfs.js
        env:
          VERCEL_URL: ${{ secrets.VERCEL_URL }}

      - name: Validate PDF generation
        run: |
          echo "üìÇ Checking PDF directory contents:"
          ls -la pdfs/
          if [ ! -d "pdfs" ] || [ -z "$(ls -A pdfs/)" ]; then
            echo "‚ùå Error: No PDFs generated. Aborting commit."
            exit 1
          fi


      - name: Commit and push if changed
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          echo "üîé Checking for changes in pdfs/..."
          git add pdfs/ # only add pdfs directory

          echo "Git status after add:"
          git status

          # check for unexpected changes outside pdfs/
          UNEXPECTED_CHANGES=$(git diff --name-only --diff-filter=M | grep -v '^pdfs/' || true)
          if [ -n "$UNEXPECTED_CHANGES" ]; then
            echo "‚ùå Unexpected changes detected outside pdfs/:"
            echo "$UNEXPECTED_CHANGES"
            echo "üö® Exiting to prevent unintended commits."
            exit 1
          fi

          # commit only if there are changes in pdfs/
          if git diff --staged --quiet; then
            echo "‚úÖ No changes to commit"
          else
            echo "üìù Committing updated PDFs..."
            # skip ci stops workflow runs (since just updating pdfs)
            git commit -m "ü§ñ Auto-updated PDFs [skip ci]"
            git push
          fi
